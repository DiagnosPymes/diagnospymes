from django.db import models

# Create your models here.
class Pyme(models.Model):
    """the class Pyme is for making a pymes table in MariaDB, the filds are: sector_id refes to the id of sector the company is involve with, email_address refes to the username to login and the email of the company, pyme_name refers to the name of the company, password refers to an encrypted string, nit refers to a tributary number, phone_number refers to the company phone number, address is the companys address, contact_name is the name of the manager of the company, contact_number is the managers phone number, contact_sex is the sex of the maneger of the company, contact_birth_day is the managers birthday, contact_id_type is the managers id type, contact_id_number managers id number, contact_educational_level is the managers educational level, terms_conditions_acceptance a boolean true or false if the company accepts terms and contions, contact_time_on_charge is the managers time on charge of the company"""
    sector_id = models.ForeingKey(sector, on_delet=models.CASCADE)
    email_address = models.CharField(max_length=100)
    pyme_name = models.CharField(max_length=100)
    password = models.CharField(max_length=100)
    nit = models.CharField(max_length=30)
    phone_number = models.CharField(max_length=10)
    address = models.CharField(max_length=50)
    contact_name = models.CharField(max_length=50)
    contact_number = models.CharField(max_length=10)
    contact_sex = models.CahrField(max_length=10)
    contact_birth_day = models.DateTimeField()
    contact_id_type = models.CharField(max_length=30)
    contact_id_number = models.CharField(max_length=15)
    contact_education_level = models.CharField(max_length=40)
    terms_conditions_acceptance = models.BooleanField()
    contact_time_on_charge = models.IntergerField()

    class Meta:
        db_table = 'pyme'


class Archive(models.Model):
    """The class Archive is for making an Archive table in MariaDB, the fields are: pyme_id refers to the autogenerated id of the pyme, file_object is a voluntary file that themanager can attach, file_type is the type of the file to be attach, file_name is the name of the file to attach"""
    pyme_id = models.ForeingKey(pymes,on_delet=models.CASCADE)
    file_object = models.FileField()
    file_type = models.CharField(max_length=10)
    file_name = models.CharField(max_length=40)

    class Meta:
        db_table = 'archive'


class Sector(models.Model):
    """The class Sector is for making a sectors table in MariaDB, based in economic secotrs in Colombia, the fields are: name is the sectors name in wich the company is involve, description is the description of the sector"""
    name = models.CharField(max_length=20)
    description = models.CharField(max_length=400)

    class Meta(models.Model):
        db_table = 'sector'


class FinancesInformation(models.Model):
    """The class FinancesInformation is for making a finances information table in MariaDB, the filds are: pyme_id is the autogenerated id of a pyme, employees_number is the number of current imployees in the company, anual_income is the anual income of a company in Colombian pesos, assets are the assets of the company in Colombian pesos, liabilities are the liabilities of the company in Colombian pesos, monthly_production is the monthly production of the company in units or Colombian pesos, productive_configuration is the productive configuration of the company, inventory_politics are the inventory politics of the company, main_product is the main product the company sells, main_competidor is the main competidor of the company, patrimony is the patrimony of the company in Colombian pesos, sales_income is the sales income of the company in Colombian pesos, gross_profits are the gross profit of the company in Colombian pesos, net_profits are the net profits of the company in Colombian pesos, fixed_costs_expences are the fixed cost and expenses of the company, variable_costs_expences are the variable costs and expences of the company, ebitda is the EBITDA of the company"""
    pyme_id = models.ForeingKey(pyme,on_delet=models.CASCADE)
    employees_number = models.IntergerField()
    anual_income = models.BigIntergerField()
    assets = models.BigIntegerField()
    liabilities = models.IntergerField()
    monthly_production = models.BigIntegerField()  
    productive_configuration = models.CharField(maxx_length=300)
    inventory_politics = models.CharField(max_length=100)
    main_product = models.CharField(max_length=30)
    main_competidor = models.CharField(max_length=30)
    patrimony = models.BigIntegerField()
    sales_income = models.BigIntegerField()
    gross_profits = models.BigIntegerField()
    net_profits = models.BigIntegerField()
    fixed_costs_expences = models.BigIntegerField()
    variable_costs_expences = models.BigIntegerField()
    ebitda = models.IntegerField()

    class Meta:
        db_table = 'finances_information'
